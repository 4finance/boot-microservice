apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'
apply plugin: "com.gorylenko.gradle-git-properties"

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE'
        classpath 'com.toomuchcoding:uptodate-gradle-plugin:+'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "io.codearte.accurest:accurest-gradle-plugin:$accurestVersion"
        classpath 'com.blogspot.toomuchcoding:gradle-test-profiler:0.3.1'
        classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.16'

        if (project.hasProperty("coverage")) {
            classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2'
            classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:1.0"
        }
    }
}

ext {
    buildNrLoc = project.hasProperty('buildNr') ? "${buildNr}" : "CD-000"
}

ext['selenium.version'] = seleniumVersion

group = mavenProjectGroupId
version = project.hasProperty('currentVersion') ? project.getProperty('currentVersion') : buildNrLoc

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework:spring-context-support"
    compile "org.codehaus.groovy:groovy-all"
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.google.guava:guava:20.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.tomcat.embed:tomcat-embed-el'
    compile 'com.jayway.jsonpath:json-path-assert:2.2.0'
    compile 'org.yaml:snakeyaml'
    compile 'org.hibernate:hibernate-validator'
    compile "org.aspectj:aspectjrt"
    compile 'org.codehaus.gpars:gpars:1.2.1'
    compile 'net.sf.ehcache:ehcache'
    compile "com.ofg:micro-infra-spring-boot-starter:$microInfraSpringVersion"
    compile "com.ofg:activity-tracker:$microInfraSpringVersion"
    compile "com.ofg:activity-tracker-boot-starter:$microInfraSpringVersion"

    compile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.6.0'
    
    runtime 'cglib:cglib-nodep:3.2.3'
    runtime 'org.objenesis:objenesis:2.4'
    runtime 'org.aspectj:aspectjweaver'
    runtime 'com.h2database:h2'

    testCompile 'com.jayway.awaitility:awaitility:1.7.0'
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "com.ofg:micro-infra-spring-test:$microInfraSpringVersion"

    testCompile "org.gebish:geb-core:$gebVersion"
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile "org.spockframework:spock-spring"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver"
    testCompile "org.seleniumhq.selenium:selenium-support"
    testCompile "org.seleniumhq.selenium:htmlunit-driver:2.24"
    testCompile "com.jayway.restassured:rest-assured:$restAssuredVersion"
    testCompile "com.jayway.restassured:spring-mock-mvc:$restAssuredVersion"

    // for easier contract devlopment - ide auto-completion support
    testCompileOnly "io.codearte.accurest:accurest-core:$accurestVersion"
}

task bootRunDev(type: org.springframework.boot.gradle.run.BootRunTask) {
	group = 'Application'
	doFirst() {
		main = project.mainClassName
		classpath = sourceSets.main.runtimeClasspath
		systemProperty 'APP_ENV', 'dev'
		systemProperty 'CONFIG_FOLDER', 'properties'
		systemProperty 'spring.profiles.active', 'dev,springCloud'
	}
}

task addHashFile doLast {
    ext.repo = org.ajoberstar.grgit.Grgit.open(project.file('.'))
    def headCommit = repo.head()
    ext.gitBranch = repo.branch.current.name
    ext.gitCommitId = headCommit.abbreviatedId
    ext.gitCommitTime = new Date(headCommit.time * 1000L).format("yyyy-MM-dd'T'HH:mm:ssZ")

    File resourcesMainDir = new File(project.buildDir, 'resources/main')
    resourcesMainDir.mkdirs()
    File gitPropertiesFile = new File(resourcesMainDir, 'git.properties')
    gitPropertiesFile.text = """git.branch=${gitBranch}
git.commit.id=${gitCommitId}
git.commit.time=${gitCommitTime}
"""
}

apply from: 'gradle/cli.gradle'
apply from: 'gradle/test.gradle'
apply from: 'gradle/misc.gradle'
apply from: 'gradle/release.gradle'
